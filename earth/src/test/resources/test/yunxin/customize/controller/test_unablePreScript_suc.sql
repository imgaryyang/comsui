SET FOREIGN_KEY_CHECKS=0;

DELETE FROM `galaxy_autotest_yunxin`.`t_product_category`;
DELETE from `galaxy_autotest_yunxin`.`t_source_repository`;

INSERT INTO `galaxy_autotest_yunxin`.`t_product_category` (`id`, `uuid`, `product_lv_1_code`, `product_lv_1_name`, `product_lv_2_code`, `product_lv_2_name`, `product_lv_3_code`, `product_lv_3_name`, `pre_process_interface_url`, `pre_process_script`, `status`, `script_md_5_version`, `date_field_one`, `date_field_two`, `date_field_three`, `long_field_one`, `long_field_two`, `long_field_three`, `string_field_one`, `string_field_two`, `string_field_three`, `decimal_field_one`, `decimal_field_two`, `decimal_field_three`)
VALUES
  (4, '380d06b4-90da-4044-a7ef-edc48283a97b', 
  'zhongan', '众安保险', 
  'modify-repaymentPlan', '变更还款计划', 
  'SXH-QXSXH', '随心还-取消随心还', 
  'modify-repaymentPlan/zhongan/SXH-QXSXH', 
  '', 1, '5a4717a081a7bacbdade49979ddf9397', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

INSERT INTO `galaxy_autotest_yunxin`.`t_source_repository` (`id`, `business_type`, `source_code`, `signature`, `compile_import`, `add_time`, `last_modify_time`, `author`) 
VALUES 
  ('4', 'modify-repaymentPlan/zhongan/SXH-QXSXH',
  'public boolean evaluate(SandboxDataSetHandler sandboxDataSetHandler, Map<String, String> preRequest, Map<String, String> postRequest, Log logger) {\r\n		logger.info(\"SXHCancelServices has been started\");\r\n		String uniqueId = (String) preRequest.getOrDefault(\"uniqueId\",\"\");\r\n		String contractNo = (String)preRequest.getOrDefault(\"contractNo\",\"\");\r\n		if (StringUtils.isEmpty(uniqueId) && StringUtils.isEmpty(contractNo)) {\r\n			logger.error(\"SXHCancelServices:uniqueId和contractNo需要赋值一个\");\r\n			postRequest.put(\"errorMsg\", \"uniqueId和contractNo需要赋值一个\");\r\n			return false;\r\n		}\r\n		String requestData = (String)preRequest.getOrDefault(\"requestData\",\"\");\r\n		List<RepaymentPlanModifyRequestDataModel> models = JsonUtils.parseArray(requestData, RepaymentPlanModifyRequestDataModel.class);\r\n		logger.info(\"SXHCancelServices get sandboxDataSet\");\r\n		SandboxDataSet sandboxDataSet = sandboxDataSetHandler.get_sandbox_for_apply_repurchase_by_contract_uniqueId_contractNo(uniqueId, contractNo);\r\n		if (null == sandboxDataSet) {\r\n			logger.error(\"SXHCancelServices:sandboxDataSet is null\");\r\n			postRequest.put(\"errorMsg\", \"sandboxDataSet is null\");\r\n			return false;\r\n		}\r\n		if (null == sandboxDataSet.getFinancialContractSnapshot()) {\r\n			logger.error(\"SXHCancelServices:financialContractSnapshot is null\");\r\n			postRequest.put(\"errorMsg\", \"financialContractSnapshot is null\");\r\n			return false;\r\n		}\r\n		if(!sandboxDataSet.getFinancialContractSnapshot().isAllowFreewheelingRepayment()){\r\n			logger.error(\"SXHCancelServices:信托合同[\"+sandboxDataSet.getFinancialContractSnapshot().getContractNo()+\"]不支持随心还\");\r\n			postRequest.put(\"errorMsg\", \"信托合同不支持随心还\");\r\n			return false;\r\n		}\r\n		List<PaymentPlanSnapshot> assetSetSnapshotList = sandboxDataSet.getPaymentPlanSnapshotList();\r\n		if (CollectionUtils.isEmpty(models) || models.size() != assetSetSnapshotList.size()) {\r\n			logger.error(\"SXHCancelServices:还款计划数不匹配\");\r\n			postRequest.put(\"errorMsg\", \"还款计划数不匹配\");\r\n			return false;\r\n		}\r\n		try{\r\n			for (int i = 0; i < assetSetSnapshotList.size(); i++) {\r\n				PaymentPlanSnapshot assetSetSnapshot = (PaymentPlanSnapshot) assetSetSnapshotList.get(i);\r\n				RepaymentPlanModifyRequestDataModel modifyRequestDataModel = (RepaymentPlanModifyRequestDataModel) models\r\n						.get(i);\r\n				String asset_interest_principal_fingerPrint = modifyRequestDataModel.assetFingerPrint();\r\n				if (!assetSetSnapshot.checkAssetFingerPrint(asset_interest_principal_fingerPrint)) {\r\n					logger.error(\"SXHCancelServices:还款计划基础费用不匹配\");\r\n					postRequest.put(\"errorMsg\", \"还款计划基础费用不匹配\");\r\n					return false;\r\n				}\r\n					//还款成功和逾期\r\n				if (assetSetSnapshot.is_clear_repayment_plan()) {\r\n					logger.error(\"SXHCancelServices:还款计划[\" + assetSetSnapshot.getSingleLoanContractNo() + \"]已结清不可变更\");\r\n					postRequest.put(\"errorMsg\", \"还款计划已结清\");\r\n					return false;\r\n				}\r\n				if (assetSetSnapshot.is_overdue_repayment_plan()) {\r\n					logger.error(\"SXHCancelServices:还款计划[\" + assetSetSnapshot.getSingleLoanContractNo() + \"]已逾期不可变更\");\r\n					postRequest.put(\"errorMsg\", \"还款计划已逾期\");\r\n					return false;\r\n				}\r\n				OnAccountStatus onAccountStatus = assetSetSnapshot.getOnAccountStatus();\r\n				if (OnAccountStatus.ON_ACCOUNT != onAccountStatus) {\r\n					logger.error(\"SXHCancelServices:还款计划[\" + assetSetSnapshot.getSingleLoanContractNo() + \"]部分结算不可变更\");\r\n					postRequest.put(\"errorMsg\", \"还款计划部分结算\");\r\n					return false;\r\n				}\r\n				if (assetSetSnapshot.is_today_repayment_plan()) {\r\n					logger.error(\"SXHCancelServices:还款计划[\" + assetSetSnapshot.getSingleLoanContractNo() + \"]还款当日不允许变更\");\r\n					postRequest.put(\"errorMsg\", \"还款当日不允许变更\");\r\n					return false;\r\n				}\r\n\r\n			}\r\n\r\n			postRequest.putAll(preRequest);\r\n			postRequest.put(\"fn\",\"200001\");\r\n			postRequest.put(\"requestReason\", RepaymentPlanModifyReason.REASON_7.getOrdinal() + \"\");\r\n			logger.info(\"SXHCancelServices is end\");\r\n			return true;\r\n		} catch (Exception e) {\r\n			e.printStackTrace();\r\n			logger.error(\"SXHCancelServices exception occurred\");\r\n			return false;\r\n		}\r\n	}', 
  '5a4717a081a7bacbdade49979ddf9397', 'java.math.*', '2017-05-04 19:03:42', '2017-05-04 19:03:42', 'sys');

SET FOREIGN_KEY_CHECKS=1;